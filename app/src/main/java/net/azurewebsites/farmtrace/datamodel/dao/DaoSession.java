package net.azurewebsites.farmtrace.datamodel.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import net.azurewebsites.farmtrace.datamodel.dao.Crop;
import net.azurewebsites.farmtrace.datamodel.dao.User;
import net.azurewebsites.farmtrace.datamodel.dao.Chemical;
import net.azurewebsites.farmtrace.datamodel.dao.FarmerGroup;
import net.azurewebsites.farmtrace.datamodel.dao.Farmer;
import net.azurewebsites.farmtrace.datamodel.dao.Fertilizer;
import net.azurewebsites.farmtrace.datamodel.dao.Field;
import net.azurewebsites.farmtrace.datamodel.dao.Seed;
import net.azurewebsites.farmtrace.datamodel.dao.PlantingSeason;

import net.azurewebsites.farmtrace.datamodel.dao.CropDao;
import net.azurewebsites.farmtrace.datamodel.dao.UserDao;
import net.azurewebsites.farmtrace.datamodel.dao.ChemicalDao;
import net.azurewebsites.farmtrace.datamodel.dao.FarmerGroupDao;
import net.azurewebsites.farmtrace.datamodel.dao.FarmerDao;
import net.azurewebsites.farmtrace.datamodel.dao.FertilizerDao;
import net.azurewebsites.farmtrace.datamodel.dao.FieldDao;
import net.azurewebsites.farmtrace.datamodel.dao.SeedDao;
import net.azurewebsites.farmtrace.datamodel.dao.PlantingSeasonDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig cropDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig chemicalDaoConfig;
    private final DaoConfig farmerGroupDaoConfig;
    private final DaoConfig farmerDaoConfig;
    private final DaoConfig fertilizerDaoConfig;
    private final DaoConfig fieldDaoConfig;
    private final DaoConfig seedDaoConfig;
    private final DaoConfig plantingSeasonDaoConfig;

    private final CropDao cropDao;
    private final UserDao userDao;
    private final ChemicalDao chemicalDao;
    private final FarmerGroupDao farmerGroupDao;
    private final FarmerDao farmerDao;
    private final FertilizerDao fertilizerDao;
    private final FieldDao fieldDao;
    private final SeedDao seedDao;
    private final PlantingSeasonDao plantingSeasonDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        cropDaoConfig = daoConfigMap.get(CropDao.class).clone();
        cropDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        chemicalDaoConfig = daoConfigMap.get(ChemicalDao.class).clone();
        chemicalDaoConfig.initIdentityScope(type);

        farmerGroupDaoConfig = daoConfigMap.get(FarmerGroupDao.class).clone();
        farmerGroupDaoConfig.initIdentityScope(type);

        farmerDaoConfig = daoConfigMap.get(FarmerDao.class).clone();
        farmerDaoConfig.initIdentityScope(type);

        fertilizerDaoConfig = daoConfigMap.get(FertilizerDao.class).clone();
        fertilizerDaoConfig.initIdentityScope(type);

        fieldDaoConfig = daoConfigMap.get(FieldDao.class).clone();
        fieldDaoConfig.initIdentityScope(type);

        seedDaoConfig = daoConfigMap.get(SeedDao.class).clone();
        seedDaoConfig.initIdentityScope(type);

        plantingSeasonDaoConfig = daoConfigMap.get(PlantingSeasonDao.class).clone();
        plantingSeasonDaoConfig.initIdentityScope(type);

        cropDao = new CropDao(cropDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        chemicalDao = new ChemicalDao(chemicalDaoConfig, this);
        farmerGroupDao = new FarmerGroupDao(farmerGroupDaoConfig, this);
        farmerDao = new FarmerDao(farmerDaoConfig, this);
        fertilizerDao = new FertilizerDao(fertilizerDaoConfig, this);
        fieldDao = new FieldDao(fieldDaoConfig, this);
        seedDao = new SeedDao(seedDaoConfig, this);
        plantingSeasonDao = new PlantingSeasonDao(plantingSeasonDaoConfig, this);

        registerDao(Crop.class, cropDao);
        registerDao(User.class, userDao);
        registerDao(Chemical.class, chemicalDao);
        registerDao(FarmerGroup.class, farmerGroupDao);
        registerDao(Farmer.class, farmerDao);
        registerDao(Fertilizer.class, fertilizerDao);
        registerDao(Field.class, fieldDao);
        registerDao(Seed.class, seedDao);
        registerDao(PlantingSeason.class, plantingSeasonDao);
    }
    
    public void clear() {
        cropDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        chemicalDaoConfig.getIdentityScope().clear();
        farmerGroupDaoConfig.getIdentityScope().clear();
        farmerDaoConfig.getIdentityScope().clear();
        fertilizerDaoConfig.getIdentityScope().clear();
        fieldDaoConfig.getIdentityScope().clear();
        seedDaoConfig.getIdentityScope().clear();
        plantingSeasonDaoConfig.getIdentityScope().clear();
    }

    public CropDao getCropDao() {
        return cropDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public ChemicalDao getChemicalDao() {
        return chemicalDao;
    }

    public FarmerGroupDao getFarmerGroupDao() {
        return farmerGroupDao;
    }

    public FarmerDao getFarmerDao() {
        return farmerDao;
    }

    public FertilizerDao getFertilizerDao() {
        return fertilizerDao;
    }

    public FieldDao getFieldDao() {
        return fieldDao;
    }

    public SeedDao getSeedDao() {
        return seedDao;
    }

    public PlantingSeasonDao getPlantingSeasonDao() {
        return plantingSeasonDao;
    }

}
